#!/usr/bin/perl
#
#
# Program:	setafsquota.pl
# Creator:	Eric Hepperle
# Date:		01/14/02
#
# Purpose:	CGI module for setting AFS quota. 
#
###################################################
#
# Revisions:
#
#	- Original:  01/14/02
#
#
#
###################################################
#
# Planned Improvements:
#
###################################################
#

print "Content-type: text/html\n\n";  


print "\n\n";
print "This program is called setafsquota.pl\n\n";


#&ReadParse;


print "<title>SET AFS QUOTA Confirmation:</title><h1>CONFIRMATION</h1><hr>";


print "<BR>\n\n";

# Prints the form data which was stored in the hash "%in".
#
#foreach $key (keys %in) {
#   print "<BR><li>$key: $in{$key}";
#   print "<BR>\$in{$key} =\t $in{$key}<BR><BR>\n\n";
#   print "key{$count} = $in{$key}<BR>\n\n";
#}


print "\n\n";


#print"<BR><B>\$in{volpath}:</B>\t$in{volpath}<BR><BR>\n\n";

#&checkforauth;
&bumpquota;

             

####################################################
# READ & PARSE
####################################################

sub ReadParse {

   local (*in) = @_ if @_;

   local ($i, $key, $val);
            
   if ( $ENV{'REQUEST_METHOD'} eq "GET" ) { 

      $in = $ENV{'QUERY_STRING'}; 

   } elsif ($ENV{'REQUEST_METHOD'} eq "POST") {

      read(STDIN,$in,$ENV{'CONTENT_LENGTH'});

   } else {

   # Added for command line debugging
   # Supply name/value form data as a command line argument
   # Format: name1=value1\&name2=value2\&... 
   # (need to escape & for shell)
   # Find the first argument that's not a switch (-)

   $in = ( grep( !/^-/, @ARGV )) [0];
   $in =~ s/\\&/&/g;

   }
             
   @in = split(/&/,$in);
             
   foreach $i (0 .. $#in) {

      # Convert plus's to spaces
      $in[$i] =~ s/\+/ /g;
             
      # Split into key and value.
      ($key, $val) = split(/=/,$in[$i],2); # splits on the first =.
             
      # Convert %XX from hex numbers to alphanumeric
      $key =~ s/%(..)/pack("c",hex($1))/ge;       
      $val =~ s/%(..)/pack("c",hex($1))/ge;
             
      # Associate key and value. \0 is the multiple separator
      $in{$key} .= "\0" if (defined($in{$key})); 
      $in{$key} .= $val;
   }

   return length($in);

}
#-------------------- END SUB ----------------------\




sub bumpquota {

   # assign bumpquota command:
   $bq = `fs sq $volume_path $desired_q`;

   $bq;


}
