#!/usr/bin/perl 
# File eh_myhtmlgen1.pl created by Eric Hepperle at 08:37:57 on Fri Aug 17 2001. 
#
# Program:	eh_dailylogger_script_r1.pl
# Creator:	Eric Hepperle
# Date:		08/22/01
#
# Purpose:	To allow one to maintain a log of daily
#		activities, and display that log as a
#		webpage.  It is based on my perl webpage
#		creator script
#
#		This is the first working, functional
#		version.
#
#		NOTE: This is a user customizable version
#		but not extremely user-friendly.
#
#########################################################



#********************************************************
# DEFAULTS:
#********************************************************
#
$maindir = "/afs/rchland.ibm.com/usr3/v2cib484/tmp";
#
#$docname = "html_test_doc.html";
#$webfile = "$maindir/$docname";
#$titletext = "This is a test web page generated by my perlscript webpage creator";
#$bgc = "green";
#$bodycontent = "AIX IS AWESOME!!!";


#********************************************************
# DISCLAIMER/HEADER:
#********************************************************
#
print "\n";
print "This program will allow you to enter an updated list of\n";
print "events and to keep a log of your day.\n";
print "\n";
print "\n";



#*********************************************************
# GET INPUT FROM USER:
#*********************************************************
#
#---------------------------------
# Get TITLE info:
#
print "Type a line of text to use for the page title:\n";
$titletext = <STDIN>;
chomp $titletext;

if ($titletext eq "") {

   $titletext = "This is a test web page generated by my perlscript webpage creator.";

}

print "\n";


#--------------------------------
# Define Temp Table File:
#
$temptablefile = "$maindir/tablefile.tmp";


#-------------------------------
# Define Cumulative Cell File:
#
$templogfile = "$maindir/logfile.tmp";


#---------------------------------
# Get content info:
#
# Get event time:
print "Time:";
$event_time = <STDIN>;
chomp $event_time;

print "The time will be logged as $event_time.";
print "\n";

# Get event text:
print "Enter what happened:\n";
print "\n";
@event_text = <STDIN>;
chomp @event_text;

print "Here is what you just typed:\n";
print (@event_text);
print "\n";


#*********************************************************
# FORMAT TABLE:
#*********************************************************

#----------------------------------
# Create New Cell, Do Variable
# substitution, and write to file.
#

&create_cell;
print "\n";

# initialize file.
open (OUT, ">>$templogfile");

   print OUT "\n";

close (OUT);


&printfile;

open OUT, ">>$templogfile" or die "Cannot open $templogfile for append :$!";

print OUT 'The time is now : ',scalar(localtime),"\n";

close OUT;

&printfile;


#---------------------------------
# Let user choose a background color:
#
print "What color would you like to make the background?\n";
print "(default is white)\n";
$bgc = <STDIN>;
chomp $bgc;

if ($bgc eq "") {

   $bgc = "white";

}

print "\n";


#---------------------------------
# Allow user to name the webpage:
#
print "What would you like to call the output document?\n";
print "(do not include the '\.html')\n";
$docname = <STDIN>;
chomp $docname;

# If user presses enter or a space, then use default name.
#
if($docname eq "") {

   $docname = "default_doc";

}

$docname = $docname.".html";

print "\n";
print "The webpage created will be called: $docname";
print "\n";


#*********************************************************
# FORMAT & CREATE MAIN WEB PAGE:
#*********************************************************
#
$webfile = "$maindir/$docname";

&rdfilen2array;

open (HTML_DOC, ">>$webfile") || die "cannot open output file $webfile \n";

print HTML_DOC "<HTML>\n";
print HTML_DOC "\n";
print HTML_DOC "<HEAD>\n";
print HTML_DOC "\n";
print HTML_DOC "<TITLE>\n";
print HTML_DOC "$titletext\n";
print HTML_DOC "</TITLE>\n";
print HTML_DOC "\n";
print HTML_DOC "</HEAD>\n";
print HTML_DOC "\n";
print HTML_DOC "<BODY BGCOLOR = $bgc>\n";
print HTML_DOC "\n";
print HTML_DOC "<TABLE>\n";
print HTML_DOC "\n";
print HTML_DOC @bodycontent;
print HTML_DOC "\n";
print HTML_DOC "</TABLE>\n";
print HTML_DOC "\n";
print HTML_DOC "</BODY>\n";
print HTML_DOC "\n";
print HTML_DOC "</HTML>\n";
print HTML_DOC "\n";


close (HTML_DOC);


#*********************************************************
# VERIFY:
#*********************************************************
#

print "Press Enter to Continue:\n";
$hold = <STDIN>;


if (open (TEMPLOG, "$templogfile")) {

    $line = <Myfile>;

    while ($line ne "") {

	print ($line);

	$line = <Myfile>;

    }

}

print "\n";


 if (open (TEMPTABLE, "$temptablefile")) {

    $line = <Myfile>;

    while ($line ne "") {

	print ($line);

	$line = <Myfile>;

    }

}

print "\n";


 if (open (HTML_DOC, "$webdoc")) {

    $line = <Myfile>;

    while ($line ne "") {

	print ($line);

	$line = <Myfile>;

    }

}


print "\n";

print "\n";
print "\n";
print "\n";

print @event_text;
print "\n";
print "\n";
print "The End!\n";



#***********************************************************
# SUBROUTINES:
#***********************************************************

sub printfile {

        open (IN, $templogfile) || die "Cannot open $templogfile for read :$!";

           while (<IN>) {

           print;

           }

        close IN;
}



sub create_cell {

   open (TEMPLOG, ">$templogfile") || die "cannot open specified file $templogfile \n";

   print TEMPLOG "<!--BEGIN ROW------------>\n";
   print TEMPLOG "<TR>\n";
   print TEMPLOG "\n";
   print TEMPLOG "   <TD WIDTH = 70 VALIGN = TOP><H6 CLASS = \"time\">$event_time</H6>\n";
   print TEMPLOG "   </TD>\n";
   print TEMPLOG "\n";
   print TEMPLOG "   <TD WIDTH = 450 VALIGN = TOP>";
   print TEMPLOG @event_text;
   print TEMPLOG "   </TD>\n";
   print TEMPLOG "\n";
   print TEMPLOG "</TR>\n";
   print TEMPLOG "\n";

close (TEMPLOG);

}


sub create_table {

@eventinfo = (<TEMPLOG>);
print "\n";
print "\n";
print "Here is contents of \"Templog\" file: \n";
print (@eventinfo);


open (TEMPTABLE, ">$temptablefile") || die "cannot open specified file $temptablefile \n";

   # erase previous contents.
   print TEMPTABLE "\n";

   print TEMPTABLE "<TABLE>\n";

   print TEMPTABLE (@event);

   print TEMPTABLE "</TABLE>\n";

close (TEMPTABLE);

}



sub rdfilen2array {

   unless (open (CUMFILE, "$templogfile") ) {

      die ("cannot open input file $templogfile \n");

   }

   @bodycontent = <CUMFILE>;

   print (@bodycontent);

}
